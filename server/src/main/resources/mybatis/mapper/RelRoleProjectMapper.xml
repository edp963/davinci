<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ <<
  ~  Davinci
  ~  ==
  ~  Copyright (C) 2016 - 2019 EDP
  ~  ==
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~  >>
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edp.davinci.dao.RelRoleProjectMapper">

    <insert id="insert" parameterType="edp.davinci.model.RelRoleProject">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT id from rel_role_project where `role_id` = #{roleId} and `project_id` = #{projectId}
        </selectKey>
        insert ignore rel_role_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            `project_id`,
            `role_id`,
            `source_permission`,
            `view_permission`,
            `widget_permission`,
            `viz_permission`,
            `schedule_permission`,
            `share_permission`,
            `download_permission`,
            `create_by`,
            `create_time`,
        </trim>
        values
        <trim prefix=" (" suffix=")" suffixOverrides=",">
            #{projectId, jdbcType=BIGINT},
            #{roleId, jdbcType=BIGINT},
            #{sourcePermission, jdbcType=SMALLINT},
            #{viewPermission, jdbcType=SMALLINT},
            #{widgetPermission, jdbcType=SMALLINT},
            #{vizPermission, jdbcType=SMALLINT},
            #{schedulePermission, jdbcType=SMALLINT},
            #{sharePermission, jdbcType=TINYINT},
            #{downloadPermission, jdbcType=TINYINT},
            #{createBy,jdbcType=BIGINT},
            #{createTime,jdbcType=TIMESTAMP}
        </trim>
    </insert>


    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
        insert ignore rel_role_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            `project_id`,
            `role_id`,
            `source_permission`,
            `view_permission`,
            `widget_permission`,
            `viz_permission`,
            `schedule_permission`,
            `share_permission`,
            `download_permission`,
            `create_by`,
            `create_time`,
        </trim>
        VALUES
        <foreach collection="list" item="record" index="index" separator=",">
            <trim prefix=" (" suffix=")" suffixOverrides=",">
                #{record.projectId, jdbcType=BIGINT},
                #{record.roleId, jdbcType=BIGINT},
                #{record.sourcePermission, jdbcType=SMALLINT},
                #{record.viewPermission, jdbcType=SMALLINT},
                #{record.widgetPermission, jdbcType=SMALLINT},
                #{record.vizPermission, jdbcType=SMALLINT},
                #{record.schedulePermission, jdbcType=SMALLINT},
                #{record.sharePermission, jdbcType=TINYINT},
                #{record.downloadPermission, jdbcType=TINYINT},
                #{record.createBy,jdbcType=BIGINT},
                #{record.createTime,jdbcType=TIMESTAMP}
            </trim>
        </foreach>
    </insert>

    <delete id="deleteByIds">
        <if test="list != null">
            delete from rel_role_project where id in
            <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </delete>


    <sql id="userMaxPermissionBaseSql">
        SELECT rrp.project_id                          as projectId,
               IFNULL(max(rrp.viz_permission), 0)      as vizPermission,
               IFNULL(max(rrp.widget_permission), 0)   as widgetPermission,
               IFNULL(max(rrp.view_permission), 0)     as viewPermission,
               IFNULL(max(rrp.source_permission), 0)   as sourcePermission,
               IFNULL(max(rrp.schedule_permission), 0) as schedulePermission,
               IFNULL(max(rrp.share_permission), 0)    as sharePermission,
               IFNULL(max(rrp.download_permission), 0) as downloadPermission
        FROM rel_role_project rrp
                 left join rel_role_user rru on rru.role_id = rrp.role_id
    </sql>

    <select id="getMaxPermissions" resultType="edp.davinci.dto.projectDto.UserMaxProjectPermission">
        <include refid="userMaxPermissionBaseSql"></include>
        WHERE rru.user_id = #{userId} and rrp.project_id in
        <foreach collection="projectIds" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        GROUP BY rrp.project_id
    </select>


    <select id="getMaxPermission" resultType="edp.davinci.dto.projectDto.UserMaxProjectPermission">
        <include refid="userMaxPermissionBaseSql"></include>
        WHERE rru.user_id = #{userId} and rrp.project_id = #{projectId}
    </select>

    <select id="getByProject" resultType="edp.davinci.model.RelRoleProject">
        select *
        from rel_role_project
        where project_id = #{projectId}
    </select>
</mapper>