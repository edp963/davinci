<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ <<
  ~  Davinci
  ~  ==
  ~  Copyright (C) 2016 - 2019 EDP
  ~  ==
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~  >>
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edp.davinci.dao.WidgetMapper">
    <insert id="insert" parameterType="edp.davinci.model.Widget">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into widget
        <trim prefix="(" suffix=")" suffixOverrides=",">
            `name`,
            <if test="description != null">
                `description`,
            </if>
            `view_id`,
            `project_id`,
            `type`,
            `publish`,
            `config`,
            `create_by`,
            `create_time`
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{name,jdbcType=VARCHAR},
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            #{viewId,jdbcType=BIGINT},
            #{projectId,jdbcType=BIGINT},
            #{type,jdbcType=BIGINT},
            #{publish,jdbcType=BIT},
            #{config,jdbcType=LONGVARCHAR},
            #{createBy,jdbcType=BIGINT},
            #{createTime,jdbcType=TIMESTAMP}
        </trim>
    </insert>


    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
        insert ignore into widget
        (`id`,`name`,`description`, view_id, `project_id`, `type`, `publish`,`config`)
        VALUES
        <foreach collection="list" item="record" index="index" separator=",">
            (
            #{record.id,jdbcType=BIGINT},
            #{record.name,jdbcType=VARCHAR},
            #{record.description,jdbcType=VARCHAR},
            #{record.viewId,jdbcType=BIGINT},
            #{record.projectId,jdbcType=BIGINT},
            #{record.type,jdbcType=BIGINT},
            #{record.publish,jdbcType=BIT},
            #{record.config,jdbcType=LONGVARCHAR}
            )
        </foreach>
    </insert>

    <update id="updateConfigBatch">
        update widget set `config` =
        <foreach collection="list" item="record" index="index" separator=" " open="case id" close="end">
            when #{record.id} then #{record.config}
        </foreach>
        where id in
        <foreach collection="list" index="index" item="record" separator="," open="(" close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </update>


    <select id="getByIds" resultType="edp.davinci.model.Widget" parameterType="java.util.Set">
        select * from widget where
        <if test="list != null and list.size > 0">
            id in
            <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="list == null or list.size == 0">
            1=0
        </if>
    </select>


    <select id="getIdSetByIds" resultType="java.lang.Long" parameterType="java.util.Set">
        select id from widget where id in
        <foreach collection="set" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
</mapper>