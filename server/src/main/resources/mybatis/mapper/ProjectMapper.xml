<?xml version="1.0" encoding="UTF-8" ?>
<!--
  <<
  Davinci
  ==
  Copyright (C) 2016 - 2018 EDP
  ==
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
  >>
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edp.davinci.dao.ProjectMapper" >

    <insert id="insert" parameterType="edp.davinci.model.Project">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert project
        <trim prefix="(" suffix=")" suffixOverrides="," >
            `name`,
            <if test="description != null">
                description,
            </if>
            <if test='pic != null and pic != "" '>
                pic,
            </if>
            org_id,
            user_id,
            visibility,
            is_transfer,
            initial_org_id
        </trim>
        values
        <trim prefix=" (" suffix=")" suffixOverrides="," >
            #{name, jdbcType=VARCHAR},
            <if test="description != null">
              #{description, jdbcType=VARCHAR},
            </if>
            <if test='pic != null and pic != "" '>
                #{pic, jdbcType=VARCHAR},
            </if>
            #{orgId, jdbcType=BIGINT},
            #{userId, jdbcType=BIGINT},
            #{visibility, jdbcType=TINYINT},
            #{isTransfer, jdbcType=TINYINT},
            #{orgId, jdbcType=BIGINT}
        </trim>
    </insert>
    
    
    <select id="getProjectsByKewordsWithUser" resultType="edp.davinci.dto.projectDto.ProjectWithCreateBy">
        SELECT
            p.*,
            IF(s.id IS NULL, FALSE, TRUE) AS 'isStar',
            u.id AS 'createBy.id',
            IF(u.`name` is NULL,u.username,u.`name`) AS 'createBy.username',
            u.avatar AS 'createBy.avatar'
        from
            (SELECT * FROM project WHERE
              org_id  IN
                <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
                    #{item.id}
                </foreach>
            ) p
            LEFT JOIN `user` u ON u.id = p.user_id
            LEFT JOIN star s ON (s.target_id = p.id AND s.target = 'project' AND s.user_id = #{userId})
            LEFT JOIN (
              SELECT org.id, ruo.role, org.member_permission
              FROM rel_user_organization ruo
              LEFT JOIN organization org ON ruo.org_id = org.id
              WHERE ruo.user_id = #{userId}
            ) o ON o.id = p.org_id
        WHERE
            (
                p.user_id = #{userId}
                OR p.visibility = 1
                OR p.id IN (
                    SELECT p.id
                    FROM project p
                    LEFT JOIN rel_team_project rtp ON rtp.project_id = p.id
                    LEFT JOIN team t ON t.id = rtp.team_id
                    LEFT JOIN rel_user_team rut ON rut.team_id = t.id
                    WHERE  rut.user_id = #{userId}
                    AND p.org_id IN
                    <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
                        #{item.id}
                    </foreach>
                )
                OR (o.member_permission > 0 AND p.visibility = 1)
                OR o.role > 0
            )
            <if test="keywords != null">
                AND LOWER(p.`name`) LIKE CONCAT(CONCAT('%', LOWER(#{keywords})), '%')
            </if>
        ORDER BY p.id
    </select>



    <select id="getProjectsByOrgWithUser" resultType="edp.davinci.dto.projectDto.ProjectWithCreateBy">
        SELECT
            p.*,
            IF(s.id is NULL, FALSE, TRUE) AS 'isStar',
            u.id AS 'createBy.id',
            IF(u.`name` is NULL,u.username,u.`name`) AS 'createBy.username',
            u.avatar AS 'createBy.avatar'
        FROM (SELECT * FROM project WHERE org_id = #{orgId}) p
           LEFT JOIN `user` u ON u.id = p.user_id
           LEFT JOIN star s ON (s.target_id = p.id AND s.target = 'project' AND s.user_id = #{userId})
           LEFT JOIN (
              SELECT org.id, ruo.role, org.member_permission
              FROM rel_user_organization ruo
              LEFT JOIN organization org ON ruo.org_id = org.id
              WHERE ruo.user_id = #{userId} AND org.id = #{orgId}
           ) o ON o.id = p.org_id
        WHERE
           (
                p.user_id = #{userId}
                OR p.visibility = 1
                OR p.id IN (
                    SELECT p.id
                    FROM project p
                    LEFT JOIN rel_team_project rtp ON rtp.project_id = p.id
                    LEFT JOIN team t ON t.id = rtp.team_id
                    LEFT JOIN rel_user_team rut ON rut.team_id = t.id
                    WHERE p.org_id = #{orgId} AND rut.user_id = #{userId}
                )
                OR (p.visibility = 1 AND o.member_permission > 0)
                OR o.role > 0
           )
            <if test="keyword != null">
                AND LOWER(p.`name`) LIKE CONCAT(CONCAT('%', LOWER(#{keyword})), '%')
            </if>
        ORDER BY p.id
    </select>



    <select id="getProejctsByUser" resultType="edp.davinci.dto.projectDto.ProjectWithCreateBy">
        SELECT
          p.*,
          IF(s.id is NULL, FALSE, TRUE) as 'isStar',
          u.id as 'createBy.id',
          IF(u.`name` is NULL,u.username,u.`name`) as 'createBy.username',
          u.avatar as 'createBy.avatar'
        from project p
               left join `user` u on u.id = p.user_id
               left join star s on (s.target_id = p.id and s.target = 'project' and s.user_id = #{userId})
        where p.id in (

          select p.id
          from project p
          where p.user_id = #{userId}

          union all

          select p.id
          from project p
                 left join rel_user_organization ruo on ruo.org_id = p.org_id
                 left join organization o on o.id = p.org_id
          where ruo.user_id = #{userId}
            and (ruo.role > 0 or (p.visibility = 1 and o.member_permission > 0))

          union all

          select p.id
          from project p
                 left join rel_team_project rtp on rtp.project_id = p.id
                 left join rel_user_team rru on rru.team_id = rtp.team_id
          where rru.user_id = #{userId}
        );
    </select>


    <select id="getFavoriteProjects" resultType="edp.davinci.dto.projectDto.ProjectWithCreateBy">
        SELECT
            p.*,
            IF(s.id is NULL, FALSE, TRUE) as 'isStar',
            u.id as 'createBy.id',
            IF(u.`name` is NULL,u.username,u.`name`) as 'createBy.username',
            u.avatar as 'createBy.avatar'
        FROM (SELECT p1.* FROM project p1 LEFT JOIN favorite f on p1.id = f.project_id WHERE f.user_id = #{userId}) as p
        left join `user` u on u.id = p.user_id
        left join star s on (s.target_id = p.id and s.target = 'project' and s.user_id = #{userId})
        left join (
           SELECT org.id, ruo.role, org.member_permission
           FROM rel_user_organization ruo
           LEFT JOIN organization org on ruo.org_id = org.id
           WHERE ruo.user_id = #{userId}
        ) o on o.id = p.org_id
        WHERE p.id IN (
           SELECT id  FROM (SELECT p1.* FROM project p1 LEFT JOIN favorite f on p1.id = f.project_id WHERE f.user_id = #{userId}) as p WHERE user_id = #{userId}
           UNION
           SELECT p.id
           FROM (SELECT p1.* FROM project p1 LEFT JOIN favorite f on p1.id = f.project_id WHERE f.user_id = #{userId}) as p
               LEFT JOIN rel_team_project rtp on rtp.project_id = p.id
               LEFT JOIN team t ON t.id = rtp.team_id
               LEFT JOIN rel_user_team rut ON rut.team_id = t.id
           WHERE rut.user_id = #{userId}
        )
        or (p.visibility = 1 and o.member_permission > 0)
        or o.role > 0
        order by p.id asc
    </select>

</mapper>