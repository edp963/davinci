(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"0427f930b2f19a25b61d":function(t,e,r){"use strict";r.d(e,"a",function(){return a});var i,n=r("e8e740b3fab0642e6a30"),s=r("b82d2ea0c8dcd2b25103");function a(t,e){this.center=void 0!==t?t:new s.a,this.radius=void 0!==e?e:0}Object.assign(a.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:(i=new n.a,function(t,e){var r=this.center;void 0!==e?r.copy(e):i.setFromPoints(t).getCenter(r);for(var n=0,s=0,a=t.length;s<a;s++)n=Math.max(n,r.distanceToSquared(t[s]));return this.radius=Math.sqrt(n),this}),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var r=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new s.a),e.copy(t),r>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new n.a),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}})},"431d73f7466491f671ed":function(t,e,r){"use strict";function i(t){if(0===t.length)return-1/0;for(var e=t[0],r=1,i=t.length;r<i;++r)t[r]>e&&(e=t[r]);return e}r.d(e,"a",function(){return i})},"4f02046caaa3f6d5dbf3":function(t,e,r){"use strict";r.r(e);var i=r("b82d2ea0c8dcd2b25103"),n=r("e8e740b3fab0642e6a30"),s=r("550464552fd011906622"),a=r("9d3ccbbdd0ff23bbfd32"),o=r("0427f930b2f19a25b61d"),u=r("022920c09d348f259d0d");function h(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(h.prototype,{computeGroups:function(t){for(var e,r=[],i=void 0,n=t.faces,s=0;s<n.length;s++){var a=n[s];a.materialIndex!==i&&(i=a.materialIndex,void 0!==e&&(e.count=3*s-e.start,r.push(e)),e={start:3*s,materialIndex:i})}void 0!==e&&(e.count=3*s-e.start,r.push(e)),this.groups=r},fromGeometry:function(t){var e,r=t.faces,i=t.vertices,n=t.faceVertexUvs,s=n[0]&&n[0].length>0,a=n[1]&&n[1].length>0,o=t.morphTargets,h=o.length;if(h>0){e=[];for(var d=0;d<h;d++)e[d]={name:o[d].name,data:[]};this.morphTargets.position=e}var c,m=t.morphNormals,l=m.length;if(l>0){c=[];for(d=0;d<l;d++)c[d]={name:m[d].name,data:[]};this.morphTargets.normal=c}var p=t.skinIndices,f=t.skinWeights,y=p.length===i.length,x=f.length===i.length;i.length>0&&0===r.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(d=0;d<r.length;d++){var g=r[d];this.vertices.push(i[g.a],i[g.b],i[g.c]);var v=g.vertexNormals;if(3===v.length)this.normals.push(v[0],v[1],v[2]);else{var b=g.normal;this.normals.push(b,b,b)}var w,B=g.vertexColors;if(3===B.length)this.colors.push(B[0],B[1],B[2]);else{var A=g.color;this.colors.push(A,A,A)}if(!0===s)void 0!==(w=n[0][d])?this.uvs.push(w[0],w[1],w[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",d),this.uvs.push(new u.a,new u.a,new u.a));if(!0===a)void 0!==(w=n[1][d])?this.uvs2.push(w[0],w[1],w[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",d),this.uvs2.push(new u.a,new u.a,new u.a));for(var N=0;N<h;N++){var z=o[N].vertices;e[N].data.push(z[g.a],z[g.b],z[g.c])}for(N=0;N<l;N++){var U=m[N].vertexNormals[d];c[N].data.push(U.a,U.b,U.c)}y&&this.skinIndices.push(p[g.a],p[g.b],p[g.c]),x&&this.skinWeights.push(f[g.a],f[g.b],f[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});var d=r("3fcced0dfecbf072faf3"),c=r("a4f0ef367f0a790cdce8"),m=r("9fdadb962569641cba1f"),l=r("d1886278d8ad2602c715"),p=r("431d73f7466491f671ed");r.d(e,"BufferGeometry",function(){return w});var f,y,x,g,v,b=1;function w(){Object.defineProperty(this,"id",{value:b+=2}),this.uuid=l.a.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}w.prototype=Object.assign(Object.create(s.a.prototype),{constructor:w,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Object(p.a)(t)>65535?a.Uint32BufferAttribute:a.Uint16BufferAttribute)(t,1):this.index=t},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):(this.attributes[t]=e,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(t,new a.BufferAttribute(arguments[1],arguments[2])))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,r){this.groups.push({start:t,count:e,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var r=this.attributes.normal;void 0!==r&&((new m.a).getNormalMatrix(t).applyToBufferAttribute(r),r.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:(v=new c.a,function(t){return v.makeRotationX(t),this.applyMatrix(v),this}),rotateY:function(){var t=new c.a;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new c.a;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new c.a;return function(e,r,i){return t.makeTranslation(e,r,i),this.applyMatrix(t),this}}(),scale:function(){var t=new c.a;return function(e,r,i){return t.makeScale(e,r,i),this.applyMatrix(t),this}}(),lookAt:(g=new d.a,function(t){g.lookAt(t),g.updateMatrix(),this.applyMatrix(g.matrix)}),center:(x=new i.a,function(){return this.computeBoundingBox(),this.boundingBox.getCenter(x).negate(),this.translate(x.x,x.y,x.z),this}),setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var r=new a.Float32BufferAttribute(3*e.vertices.length,3),i=new a.Float32BufferAttribute(3*e.colors.length,3);if(this.addAttribute("position",r.copyVector3sArray(e.vertices)),this.addAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var n=new a.Float32BufferAttribute(e.lineDistances.length,1);this.addAttribute("lineDistance",n.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r];e.push(n.x,n.y,n.z||0)}return this.addAttribute("position",new a.Float32BufferAttribute(e,3)),this},updateFromObject:function(t){var e,r=t.geometry;if(t.isMesh){var i=r.__directGeometry;if(!0===r.elementsNeedUpdate&&(i=void 0,r.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(r);i.verticesNeedUpdate=r.verticesNeedUpdate,i.normalsNeedUpdate=r.normalsNeedUpdate,i.colorsNeedUpdate=r.colorsNeedUpdate,i.uvsNeedUpdate=r.uvsNeedUpdate,i.groupsNeedUpdate=r.groupsNeedUpdate,r.verticesNeedUpdate=!1,r.normalsNeedUpdate=!1,r.colorsNeedUpdate=!1,r.uvsNeedUpdate=!1,r.groupsNeedUpdate=!1,r=i}return!0===r.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(r.vertices),e.needsUpdate=!0),r.verticesNeedUpdate=!1),!0===r.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(r.normals),e.needsUpdate=!0),r.normalsNeedUpdate=!1),!0===r.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(r.colors),e.needsUpdate=!0),r.colorsNeedUpdate=!1),r.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(r.uvs),e.needsUpdate=!0),r.uvsNeedUpdate=!1),r.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(r.lineDistances),e.needsUpdate=!0),r.lineDistancesNeedUpdate=!1),r.groupsNeedUpdate&&(r.computeGroups(t.geometry),this.groups=r.groups,r.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new h).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new a.BufferAttribute(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var r=new Float32Array(3*t.normals.length);this.addAttribute("normal",new a.BufferAttribute(r,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var i=new Float32Array(3*t.colors.length);this.addAttribute("color",new a.BufferAttribute(i,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var n=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new a.BufferAttribute(n,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var s=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new a.BufferAttribute(s,2).copyVector2sArray(t.uvs2))}for(var o in this.groups=t.groups,t.morphTargets){for(var u=[],h=t.morphTargets[o],d=0,c=h.length;d<c;d++){var m=h[d],l=new a.Float32BufferAttribute(3*m.data.length,3);l.name=m.name,u.push(l.copyVector3sArray(m.data))}this.morphAttributes[o]=u}if(t.skinIndices.length>0){var p=new a.Float32BufferAttribute(4*t.skinIndices.length,4);this.addAttribute("skinIndex",p.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var f=new a.Float32BufferAttribute(4*t.skinWeights.length,4);this.addAttribute("skinWeight",f.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new n.a);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:(f=new n.a,y=new i.a,function(){null===this.boundingSphere&&(this.boundingSphere=new o.a);var t=this.attributes.position;if(t){var e=this.boundingSphere.center;f.setFromBufferAttribute(t),f.getCenter(e);for(var r=0,i=0,n=t.count;i<n;i++)y.x=t.getX(i),y.y=t.getY(i),y.z=t.getZ(i),r=Math.max(r,e.distanceToSquared(y));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var r=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new a.BufferAttribute(new Float32Array(r.length),3));else for(var n=e.normal.array,s=0,o=n.length;s<o;s++)n[s]=0;var u,h,d,c=e.normal.array,m=new i.a,l=new i.a,p=new i.a,f=new i.a,y=new i.a;if(t){var x=t.array;for(s=0,o=t.count;s<o;s+=3)u=3*x[s+0],h=3*x[s+1],d=3*x[s+2],m.fromArray(r,u),l.fromArray(r,h),p.fromArray(r,d),f.subVectors(p,l),y.subVectors(m,l),f.cross(y),c[u]+=f.x,c[u+1]+=f.y,c[u+2]+=f.z,c[h]+=f.x,c[h+1]+=f.y,c[h+2]+=f.z,c[d]+=f.x,c[d+1]+=f.y,c[d+2]+=f.z}else for(s=0,o=r.length;s<o;s+=9)m.fromArray(r,s),l.fromArray(r,s+3),p.fromArray(r,s+6),f.subVectors(p,l),y.subVectors(m,l),f.cross(y),c[s]=f.x,c[s+1]=f.y,c[s+2]=f.z,c[s+3]=f.x,c[s+4]=f.y,c[s+5]=f.z,c[s+6]=f.x,c[s+7]=f.y,c[s+8]=f.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(var i in r)if(void 0!==t.attributes[i])for(var n=r[i].array,s=t.attributes[i],a=s.array,o=0,u=s.itemSize*e;o<a.length;o++,u++)n[u]=a[o];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){var t=new i.a;return function(){for(var e=this.attributes.normal,r=0,i=e.count;r<i;r++)t.x=e.getX(r),t.y=e.getY(r),t.z=e.getZ(r),t.normalize(),e.setXYZ(r,t.x,t.y,t.z)}}(),toNonIndexed:function(){function t(t,e){for(var r=t.array,i=t.itemSize,n=new r.constructor(e.length*i),s=0,o=0,u=0,h=e.length;u<h;u++){s=e[u]*i;for(var d=0;d<i;d++)n[o++]=r[s++]}return new a.BufferAttribute(n,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new w,r=this.index.array,i=this.attributes;for(var n in i){var s=t(i[n],r);e.addAttribute(n,s)}var o=this.morphAttributes;for(n in o){for(var u=[],h=o[n],d=0,c=h.length;d<c;d++){s=t(h[d],r);u.push(s)}e.morphAttributes[n]=u}for(var m=this.groups,l=(d=0,m.length);d<l;d++){var p=m[d];e.addGroup(p.start,p.count,p.materialIndex)}return e},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var r in e)void 0!==e[r]&&(t[r]=e[r]);return t}t.data={attributes:{}};var i=this.index;if(null!==i){var n=Array.prototype.slice.call(i.array);t.data.index={type:i.array.constructor.name,array:n}}var s=this.attributes;for(var r in s){var a=s[r];n=Array.prototype.slice.call(a.array);t.data.attributes[r]={itemSize:a.itemSize,type:a.array.constructor.name,array:n,normalized:a.normalized}}var o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));var u=this.boundingSphere;return null!==u&&(t.data.boundingSphere={center:u.center.toArray(),radius:u.radius}),t},clone:function(){return(new w).copy(this)},copy:function(t){var e,r,i;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var n=t.index;null!==n&&this.setIndex(n.clone());var s=t.attributes;for(e in s){var a=s[e];this.addAttribute(e,a.clone())}var o=t.morphAttributes;for(e in o){var u=[],h=o[e];for(r=0,i=h.length;r<i;r++)u.push(h[r].clone());this.morphAttributes[e]=u}var d=t.groups;for(r=0,i=d.length;r<i;r++){var c=d[r];this.addGroup(c.start,c.count,c.materialIndex)}var m=t.boundingBox;null!==m&&(this.boundingBox=m.clone());var l=t.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}})},e8e740b3fab0642e6a30:function(t,e,r){"use strict";r.d(e,"a",function(){return u});var i,n,s,a=r("b82d2ea0c8dcd2b25103"),o=r("0427f930b2f19a25b61d");function u(t,e){this.min=void 0!==t?t:new a.a(1/0,1/0,1/0),this.max=void 0!==e?e:new a.a(-1/0,-1/0,-1/0)}Object.assign(u.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,r=1/0,i=1/0,n=-1/0,s=-1/0,a=-1/0,o=0,u=t.length;o<u;o+=3){var h=t[o],d=t[o+1],c=t[o+2];h<e&&(e=h),d<r&&(r=d),c<i&&(i=c),h>n&&(n=h),d>s&&(s=d),c>a&&(a=c)}return this.min.set(e,r,i),this.max.set(n,s,a),this},setFromBufferAttribute:function(t){for(var e=1/0,r=1/0,i=1/0,n=-1/0,s=-1/0,a=-1/0,o=0,u=t.count;o<u;o++){var h=t.getX(o),d=t.getY(o),c=t.getZ(o);h<e&&(e=h),d<r&&(r=d),c<i&&(i=c),h>n&&(n=h),d>s&&(s=d),c>a&&(a=c)}return this.min.set(e,r,i),this.max.set(n,s,a),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:(s=new a.a,function(t,e){var r=s.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new a.a),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new a.a),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){var t,e,r,i=new a.a;function n(n){var s=n.geometry;if(void 0!==s)if(s.isGeometry){var a=s.vertices;for(e=0,r=a.length;e<r;e++)i.copy(a[e]),i.applyMatrix4(n.matrixWorld),t.expandByPoint(i)}else if(s.isBufferGeometry){var o=s.attributes.position;if(void 0!==o)for(e=0,r=o.count;e<r;e++)i.fromBufferAttribute(o,e).applyMatrix4(n.matrixWorld),t.expandByPoint(i)}}return function(e){return t=this,e.updateMatrixWorld(!0),e.traverse(n),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new a.a),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:(n=new a.a,function(t){return this.clampPoint(t.center,n),n.distanceToSquared(t.center)<=t.radius*t.radius}),intersectsPlane:function(t){var e,r;return t.normal.x>0?(e=t.normal.x*this.min.x,r=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,r=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,r+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,r+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,r+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,r+=t.normal.z*this.min.z),e<=-t.constant&&r>=-t.constant},intersectsTriangle:function(){var t=new a.a,e=new a.a,r=new a.a,i=new a.a,n=new a.a,s=new a.a,o=new a.a,u=new a.a,h=new a.a,d=new a.a;function c(i){var n,s;for(n=0,s=i.length-3;n<=s;n+=3){o.fromArray(i,n);var a=h.x*Math.abs(o.x)+h.y*Math.abs(o.y)+h.z*Math.abs(o.z),u=t.dot(o),d=e.dot(o),c=r.dot(o);if(Math.max(-Math.max(u,d,c),Math.min(u,d,c))>a)return!1}return!0}return function(a){if(this.isEmpty())return!1;this.getCenter(u),h.subVectors(this.max,u),t.subVectors(a.a,u),e.subVectors(a.b,u),r.subVectors(a.c,u),i.subVectors(e,t),n.subVectors(r,e),s.subVectors(t,r);var o=[0,-i.z,i.y,0,-n.z,n.y,0,-s.z,s.y,i.z,0,-i.x,n.z,0,-n.x,s.z,0,-s.x,-i.y,i.x,0,-n.y,n.x,0,-s.y,s.x,0];return!!c(o)&&(!!c(o=[1,0,0,0,1,0,0,0,1])&&(d.crossVectors(i,n),c(o=[d.x,d.y,d.z])))}}(),clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new a.a),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new a.a;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new a.a;return function(e){return void 0===e&&(console.warn("THREE.Box3: .getBoundingSphere() target is now required"),e=new o.a),this.getCenter(e.center),e.radius=.5*this.getSize(t).length(),e}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:(i=[new a.a,new a.a,new a.a,new a.a,new a.a,new a.a,new a.a,new a.a],function(t){return this.isEmpty()?this:(i[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),i[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),i[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),i[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),i[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),i[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),i[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),i[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(i),this)}),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}})}}]);